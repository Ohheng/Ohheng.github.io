<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>初识算法</title>
    <link href="/2024/06/12/(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95)/"/>
    <url>/2024/06/12/(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95)/</url>
    
    <content type="html"><![CDATA[<h1 id="一-初识算法"><a href="#一-初识算法" class="headerlink" title="一.初识算法"></a>一.初识算法</h1><h2 id="1-1-什么是算法？"><a href="#1-1-什么是算法？" class="headerlink" title="1.1 什么是算法？"></a>1.1 什么是算法？</h2><p><strong>定义</strong></p><p>在数学和计算机科学领域，算法是一系列有限的严谨指令，通常用于解决一类特定问题或执行计算</p><blockquote><p>In mathematics and computer science, an <strong>algorithm</strong> (&#x2F;ˈælɡərɪðəm&#x2F;) is a finite sequence of rigorous instructions, typically used to solve a class of specific problems or to perform a computation.[^1]</p></blockquote><p><strong>Introduction to Algorithm[^2]</strong></p><p>不正式的说，算法就是任何定义优良的计算过程：接收一些值作为输入，在有限的时间内，产生一些值作为输出。</p><blockquote><p>Informally, an algorithm is any well-defined computational procedure that takes some value, or set of values, as input and produces some value, or set of values, as output in a finite amount of time.</p></blockquote><h2 id="1-2-什么是数据结构？"><a href="#1-2-什么是数据结构？" class="headerlink" title="1.2 什么是数据结构？"></a>1.2 什么是数据结构？</h2><p><strong>定义</strong></p><p>在计算机科学领域，数据结构是一种数据组织、管理和存储格式，通常被选择用来高效访问数据</p><blockquote><p>In computer science, a <strong>data structure</strong> is a data organization, management, and storage format that is usually chosen for efficient access to data</p></blockquote><p><strong>Introduction to Algorithm[^2]</strong></p><p>数据结构是一种存储和组织数据的方式，旨在便于访问和修改</p><blockquote><p>A data structure is a way to store and organize data in order to facilitate access and modifications</p></blockquote><p>接下来我们通过对一个非常著名的二分查找算法的讲解来认识一下算法</p><h2 id="1-3-二分查找-3"><a href="#1-3-二分查找-3" class="headerlink" title="1.3 二分查找 [^3]"></a>1.3 二分查找 [^3]</h2><p>二分查找算法也称折半查找，是一种非常高效的工作于有序数组的查找算法。后续的课程中还会学习更多的查找算法，但在此之前，不妨用它作为入门。</p><h3 id="二分查找基础版"><a href="#二分查找基础版" class="headerlink" title="二分查找基础版"></a>二分查找基础版</h3><p>需求：在<strong>有序</strong>数组 $A$ 内，查找值 $target$</p><ul><li>如果找到返回索引</li><li>如果找不到返回 $-1$</li></ul><table><thead><tr><th>算法描述</th><th></th></tr></thead><tbody><tr><td>前提</td><td>给定一个内含 $n$ 个元素的有序数组 $A$，满足 $A_{0}\leq A_{1}\leq A_{2}\leq \cdots \leq A_{n-1}$，一个待查值 $target$</td></tr><tr><td>1</td><td>设置 $i&#x3D;0$，$j&#x3D;n-1$</td></tr><tr><td>2</td><td>如果 $i \gt j$，结束查找，没找到</td></tr><tr><td>3</td><td>设置 $m &#x3D; floor(\frac {i+j}{2})$ ，$m$ 为中间索引，$floor$ 是向下取整（$\leq \frac {i+j}{2}$ 的最小整数）</td></tr><tr><td>4</td><td>如果 $target &lt; A_{m}$ 设置 $j &#x3D; m - 1$，跳到第2步</td></tr><tr><td>5</td><td>如果 $A_{m} &lt; target$ 设置 $i &#x3D; m + 1$，跳到第2步</td></tr><tr><td>6</td><td>如果 $A_{m} &#x3D; target$，结束查找，找到了</td></tr></tbody></table><p>java 实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearch</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<span class="hljs-comment">// 在左边</span><br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<span class="hljs-comment">// 在右边</span><br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> m;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>$i,j$ 对应着搜索区间 $[0,a.length-1]$（注意是闭合的区间），$i&lt;&#x3D;j$ 意味着搜索区间内还有未比较的元素，$i,j$ 指向的元素也可能是比较的目标<ul><li>思考：如果不加 $i&#x3D;&#x3D;j$ 行不行？</li><li>回答：不行，因为这意味着 $i,j$ 指向的元素会漏过比较</li></ul></li><li>$m$ 对应着中间位置，中间位置左边和右边的元素可能不相等（差一个），不会影响结果</li><li>如果某次未找到，那么缩小后的区间内不包含 $m$</li></ul><h3 id="二分查找改变版"><a href="#二分查找改变版" class="headerlink" title="二分查找改变版"></a>二分查找改变版</h3><p>另一种写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearch</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length;<br>    <span class="hljs-keyword">while</span> (i &lt; j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<span class="hljs-comment">// 在左边</span><br>            j = m;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<span class="hljs-comment">// 在右边</span><br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> m;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>$i,j$ 对应着搜索区间 $[0,a.length)$（注意是左闭右开的区间），$i&lt;j$ 意味着搜索区间内还有未比较的元素，$j$ 指向的<strong>一定不是</strong>查找目标<ul><li>思考：为啥这次不加 $i&#x3D;&#x3D;j$ 的条件了？</li><li>回答：这回 $j$ 指向的不是查找目标，如果还加 $i&#x3D;&#x3D;j$ 条件，就意味着 $j$ 指向的还会再次比较，找不到时，会死循环</li></ul></li><li>如果某次要缩小右边界，那么 $j&#x3D;m$，因为此时的 $m$ 已经<strong>不是</strong>查找目标了</li></ul><h3 id="衡量算法好坏"><a href="#衡量算法好坏" class="headerlink" title="衡量算法好坏"></a>衡量算法好坏</h3><p><strong>时间复杂度</strong></p><p>下面的查找算法也能得出与之前二分查找一样的结果，那你能说出它差在哪里吗？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">search</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> k)</span> &#123;<br>    <span class="hljs-keyword">for</span> (<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        i &lt; a.length;<br>        i++<br>    ) &#123;<br>        <span class="hljs-keyword">if</span> (a[i] == k) &#123;<br>            <span class="hljs-keyword">return</span> i;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>考虑最坏情况下（没找到）例如 <code>[1,2,3,4]</code> 查找 5</p><ul><li><code>int i = 0</code> 只执行一次</li><li><code>i &lt; a.length</code> 受数组元素个数 $n$ 的影响，比较 $n+1$ 次</li><li><code>i++</code> 受数组元素个数 $n$ 的影响，自增 $n$ 次</li><li><code>a[i] == k</code> 受元素个数 $n$ 的影响，比较 $n$ 次</li><li><code>return -1</code>，执行一次</li></ul><p>粗略认为每行代码执行时间是 $t$，假设 $n&#x3D;4$ 那么</p><ul><li>总执行时间是 $(1+4+1+4+4+1)*t &#x3D; 15t$</li><li>可以推导出更一般地公式为，$T &#x3D; (3*n+3)t$</li></ul><p>如果套用二分查找算法，还是 <code>[1,2,3,4]</code> 查找 5</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearch</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<span class="hljs-comment">// 在左边</span><br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<span class="hljs-comment">// 在右边</span><br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> m;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p><code>int i = 0, j = a.length - 1</code> 各执行 1 次</p></li><li><p><code>i &lt;= j</code> 比较 $floor(\log_{2}(n)+1)$ 再加 1 次</p></li><li><p><code>(i + j) &gt;&gt;&gt; 1</code> 计算 $floor(\log_{2}(n)+1)$ 次</p></li><li><p>接下来 <code>if() else if() else</code> 会执行 $3* floor(\log_{2}(n)+1)$ 次，分别为</p><ul><li>if 比较</li><li>else if 比较</li><li>else if 比较成立后的赋值语句</li></ul></li><li><p><code>return -1</code>，执行一次</p></li></ul><p>结果：</p><ul><li>总执行时间为 $(2 + (1+3) + 3 + 3 * 3 +1)*t &#x3D; 19t$</li><li>更一般地公式为 $(4 + 5 * floor(\log_{2}(n)+1))*t$</li></ul><blockquote><p><strong>注意：</strong></p><p>左侧未找到和右侧未找到结果不一样，这里不做分析</p></blockquote><p>两个算法比较，可以看到 $n$ 在较小的时候，二者花费的次数差不多</p><img src="http://cdn.ohheng.cn/202406120943187.png" alt="image-20221108095747933" style="zoom:50%;" /><p>但随着 $n$ 越来越大，比如说 $n&#x3D;1000$ 时，用二分查找算法（红色）也就是 $54t$，而蓝色算法则需要 $3003t$</p><img src="http://cdn.ohheng.cn/202406120943640.png" alt="image-20221108100014451" style="zoom:50%;" /><blockquote><p>画图采用的是 <a href="https://www.desmos.com/calculator?lang=zh-CN">Desmos | 图形计算器</a></p></blockquote><p>计算机科学中，<strong>时间复杂度</strong>是用来衡量：一个算法的执行，随数据规模增大，而增长的时间成本</p><ul><li>不依赖于环境因素</li></ul><p>如何表示时间复杂度呢？</p><ul><li><p>假设算法要处理的数据规模是 $n$，代码总的执行行数用函数 $f(n)$ 来表示，例如：</p><ul><li>线性查找算法的函数 $f(n) &#x3D; 3*n + 3$</li><li>二分查找算法的函数 $f(n) &#x3D; (floor(log_2(n)) + 1) * 5 + 4$</li></ul></li><li><p>为了对 $f(n)$ 进行化简，应当抓住主要矛盾，找到一个变化趋势与之相近的表示法</p></li></ul><p><strong>大 $O$ 表示法[^4]</strong></p><p><img src="http://cdn.ohheng.cn/202406120943939.png" alt="image-20221108103846566"></p><p>其中</p><ul><li>$c, c_1, c_2$ 都为一个常数</li><li>$f(n)$ 是实际执行代码行数与 n 的函数</li><li>$g(n)$ 是经过化简，变化趋势与 $f(n)$ 一致的 n 的函数</li></ul><p><strong>渐进上界</strong></p><p>渐进上界（asymptotic upper bound）：从某个常数 $n_0$开始，$c*g(n)$ 总是位于 $f(n)$ 上方，那么记作 $O(g(n))$</p><ul><li>代表算法执行的最差情况</li></ul><p>例1</p><ul><li>$f(n) &#x3D; 3*n+3$ </li><li>$g(n) &#x3D; n$</li><li>取 $c&#x3D;4$，在$n_0&#x3D;3$ 之后，$g(n)$ 可以作为 $f(n)$ 的渐进上界，因此表示法写作 $O(n)$</li></ul><p>例2</p><ul><li>$f(n) &#x3D; 5*floor(log_2(n)) + 9$</li><li>$g(n) &#x3D; log_2(n)$</li><li>$O(log_2(n))$</li></ul><p>已知 $f(n)$ 来说，求 $g(n)$</p><ul><li>表达式中相乘的常量，可以省略，如<ul><li>$f(n) &#x3D; 100*n^2$ 中的 $100$</li></ul></li><li>多项式中数量规模更小（低次项）的表达式，如<ul><li>$f(n)&#x3D;n^2+n$ 中的 $n$</li><li>$f(n) &#x3D; n^3 + n^2$ 中的 $n^2$</li></ul></li><li>不同底数的对数，渐进上界可以用一个对数函数 $\log n$ 表示<ul><li>例如：$log_2(n)$ 可以替换为 $log_{10}(n)$，因为 $log_2(n) &#x3D; \frac{log_{10}(n)}{log_{10}(2)}$，相乘的常量 $\frac{1}{log_{10}(2)}$ 可以省略</li></ul></li><li>类似的，对数的常数次幂可省略<ul><li>如：$log(n^c) &#x3D; c * log(n)$</li></ul></li></ul><p><strong>常见大 $O$ 表示法</strong></p><p><img src="http://cdn.ohheng.cn/202406120943799.png" alt="image-20221108114915524"></p><p> 按时间复杂度从低到高</p><ul><li>黑色横线 $O(1)$，常量时间，意味着算法时间并不随数据规模而变化</li><li>绿色 $O(log(n))$，对数时间</li><li>蓝色 $O(n)$，线性时间，算法时间与数据规模成正比</li><li>橙色 $O(n*log(n))$，拟线性时间</li><li>红色 $O(n^2)$ 平方时间</li><li>黑色朝上 $O(2^n)$ 指数时间</li><li>没画出来的 $O(n!)$</li></ul><p><strong>渐进下界</strong></p><p>渐进下界（asymptotic lower bound）：从某个常数 $n_0$开始，$c*g(n)$ 总是位于 $f(n)$ 下方，那么记作 $\Omega(g(n))$</p><p><strong>渐进紧界</strong></p><p>渐进紧界（asymptotic tight bounds）：从某个常数 $n_0$开始，$f(n)$ 总是在 $c_1<em>g(n)$ 和 $c_2</em>g(n)$ 之间，那么记作 $\Theta(g(n))$</p><p><strong>空间复杂度</strong></p><p>与时间复杂度类似，一般也使用大 $O$ 表示法来衡量：一个算法执行随数据规模增大，而增长的<strong>额外</strong>空间成本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearchBasic</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;    <span class="hljs-comment">// 设置指针和初值</span><br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;                <span class="hljs-comment">// i~j 范围内有东西</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(target &lt; a[m]) &#123;         <span class="hljs-comment">// 目标在左边</span><br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123; <span class="hljs-comment">// 目标在右边</span><br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;                    <span class="hljs-comment">// 找到了</span><br>            <span class="hljs-keyword">return</span> m;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>二分查找性能</strong></p><p>下面分析二分查找算法的性能</p><p>时间复杂度</p><ul><li>最坏情况：$O(\log n)$</li><li>最好情况：如果待查找元素恰好在数组中央，只需要循环一次 $O(1)$</li></ul><p>空间复杂度</p><ul><li>需要常数个指针 $i,j,m$，因此额外占用的空间是 $O(1)$</li></ul><h3 id="二分查找平衡版"><a href="#二分查找平衡版" class="headerlink" title="二分查找平衡版"></a>二分查找平衡版</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearchBalance</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span> &lt; j - i) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            i = m;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> (a[i] == target) ? i : -<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>思想：</p><ol><li>左闭右开的区间，$i$ 指向的可能是目标，而 $j$ 指向的不是目标</li><li>不奢望循环内通过 $m$ 找出目标, 缩小区间直至剩 1 个, 剩下的这个可能就是要找的（通过 $i$）<ul><li>$j - i &gt; 1$ 的含义是，在范围内待比较的元素个数 &gt; 1</li></ul></li><li>改变 $i$ 边界时，它指向的可能是目标，因此不能 $m+1$</li><li>循环内的平均比较次数减少了</li><li>时间复杂度 $\Theta(log(n))$</li></ol><h3 id="二分查找-Java-版"><a href="#二分查找-Java-版" class="headerlink" title="二分查找 Java 版"></a>二分查找 Java 版</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearch0</span><span class="hljs-params">(<span class="hljs-type">long</span>[] a, <span class="hljs-type">int</span> fromIndex, <span class="hljs-type">int</span> toIndex,</span><br><span class="hljs-params">                                     <span class="hljs-type">long</span> key)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">low</span> <span class="hljs-operator">=</span> fromIndex;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">high</span> <span class="hljs-operator">=</span> toIndex - <span class="hljs-number">1</span>;<br><br>    <span class="hljs-keyword">while</span> (low &lt;= high) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">mid</span> <span class="hljs-operator">=</span> (low + high) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">midVal</span> <span class="hljs-operator">=</span> a[mid];<br><br>        <span class="hljs-keyword">if</span> (midVal &lt; key)<br>            low = mid + <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (midVal &gt; key)<br>            high = mid - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-keyword">return</span> mid; <span class="hljs-comment">// key found</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> -(low + <span class="hljs-number">1</span>);  <span class="hljs-comment">// key not found.</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>例如 $[1,3,5,6]$ 要插入 $2$ 那么就是找到一个位置，这个位置左侧元素都比它小<ul><li>等循环结束，若没找到，low 左侧元素肯定都比 target 小，因此 low 即插入点</li></ul></li><li>插入点取负是为了与找到情况区分</li><li>-1 是为了把索引 0 位置的插入点与找到的情况进行区分</li></ul><h3 id="Leftmost-与-Rightmost"><a href="#Leftmost-与-Rightmost" class="headerlink" title="Leftmost 与 Rightmost"></a>Leftmost 与 Rightmost</h3><p>有时我们希望返回的是最左侧的重复元素，如果用 Basic 二分查找</p><ul><li><p>对于数组 $[1, 2, 3, 4, 4, 5, 6, 7]$，查找元素4，结果是索引3</p></li><li><p>对于数组 $[1, 2, 4, 4, 4, 5, 6, 7]$，查找元素4，结果也是索引3，并不是最左侧的元素</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearchLeftmost1</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">candidate</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            candidate = m; <span class="hljs-comment">// 记录候选位置</span><br>            j = m - <span class="hljs-number">1</span>;     <span class="hljs-comment">// 继续向左</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> candidate;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果希望返回的是最右侧元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearchRightmost1</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">candidate</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            candidate = m; <span class="hljs-comment">// 记录候选位置</span><br>            i = m + <span class="hljs-number">1</span>;   <span class="hljs-comment">// 继续向右</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> candidate;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>应用</strong></p><p>对于 Leftmost 与 Rightmost，可以返回一个比 -1 更有用的值</p><p>Leftmost 改为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearchLeftmost</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt;= a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> i; <br>&#125;<br></code></pre></td></tr></table></figure><ul><li>leftmost 返回值的另一层含义：$\lt target$ 的元素个数</li><li>小于等于中间值，都要向左找</li></ul><p>Rightmost 改为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearchRightmost</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> i - <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>大于等于中间值，都要向右找</li></ul><p>几个名词</p><p><img src="http://cdn.ohheng.cn/202406120944615.png" alt="image-20221125174155058"></p><p><strong>范围查询</strong>：</p><ul><li>查询 $x \lt 4$，$0 .. leftmost(4) - 1$</li><li>查询 $x \leq 4$，$0 .. rightmost(4)$</li><li>查询 $4 \lt x$，$rightmost(4) + 1 .. \infty $</li><li>查询 $4 \leq x$， $leftmost(4) .. \infty$</li><li>查询 $4 \leq x \leq 7$，$leftmost(4) .. rightmost(7)$</li><li>查询 $4 \lt x \lt 7$，$rightmost(4)+1 .. leftmost(7)-1$</li></ul><p><strong>求排名</strong>：$leftmost(target) + 1$</p><ul><li>$target$ 可以不存在，如：$leftmost(5)+1 &#x3D; 6$</li><li>$target$ 也可以存在，如：$leftmost(4)+1 &#x3D; 3$</li></ul><p><strong>求前任（predecessor）</strong>：$leftmost(target) - 1$</p><ul><li>$leftmost(3) - 1 &#x3D; 1$，前任 $a_1 &#x3D; 2$</li><li>$leftmost(4) - 1 &#x3D; 1$，前任 $a_1 &#x3D; 2$</li></ul><p><strong>求后任（successor）</strong>：$rightmost(target)+1$</p><ul><li>$rightmost(5) + 1 &#x3D; 5$，后任 $a_5 &#x3D; 7$</li><li>$rightmost(4) + 1 &#x3D; 5$，后任 $a_5 &#x3D; 7$</li></ul><p><strong>求最近邻居</strong>：</p><ul><li>前任和后任距离更近者</li></ul><h1 id="二-练习"><a href="#二-练习" class="headerlink" title="二. 练习"></a>二. 练习</h1><h2 id="2-1-时间复杂度"><a href="#2-1-时间复杂度" class="headerlink" title="2.1 时间复杂度"></a>2.1 时间复杂度</h2><p>用函数 $f(n)$ 表示算法效率与数据规模的关系，假设每次解决问题需要 1 微秒（$10^{-6}$ 秒），进行估算：</p><ol><li>如果 $f(n) &#x3D; n^2$ 那么 1 秒能解决多少次问题？1 天呢？</li><li>如果 $f(n) &#x3D; log_2(n)$  那么 1 秒能解决多少次问题？1 天呢？</li><li>如果 $f(n) &#x3D; n!$ 那么 1 秒能解决多少次问题？1 天呢？</li></ol><p>参考解答</p><ol><li>1秒 $\sqrt{10^6} &#x3D; 1000$ 次，1 天 $\sqrt{10^6 * 3600 * 24} \approx 293938$ 次</li><li>1秒 $2^{1,000,000} $ 次，一天 $2^{86,400,000,000}$</li><li>推算如下<ul><li>$10! &#x3D; 3,628,800$ 1秒能解决 $1,000,000$ 次，因此次数为 9 次</li><li>$14!&#x3D;87,178,291,200$，一天能解决 $86,400,000,000$ 次，因此次数为 13 次</li></ul></li></ol><h2 id="2-2-二分查找"><a href="#2-2-二分查找" class="headerlink" title="2.2 二分查找"></a>2.2 二分查找</h2><ul><li><a href="https://leetcode.cn/problems/sqrtx/">69. x 的平方根 - 力扣（LeetCode）</a></li></ul><h3 id="E01-二分查找-力扣-704-题"><a href="#E01-二分查找-力扣-704-题" class="headerlink" title="E01. 二分查找-力扣 704 题"></a>E01. 二分查找-力扣 704 题</h3><p><strong>要点</strong>：减而治之，可以用递归或非递归实现</p><p>给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1</p><p>例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">输入: nums = [-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">12</span>], target = <span class="hljs-number">9</span><br>输出: <span class="hljs-number">4</span><br>解释: <span class="hljs-number">9</span> 出现在 nums 中并且下标为 <span class="hljs-number">4</span><br>    <br>输入: nums = [-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">12</span>], target = <span class="hljs-number">2</span><br>输出: -<span class="hljs-number">1</span><br>解释: <span class="hljs-number">2</span> 不存在 nums 中因此返回 -<span class="hljs-number">1</span>    <br></code></pre></td></tr></table></figure><p><strong>参考答案</strong>：略，可以用讲过的任意一种二分求解</p><h3 id="E02-搜索插入位置-力扣-35-题"><a href="#E02-搜索插入位置-力扣-35-题" class="headerlink" title="E02. 搜索插入位置-力扣 35 题"></a>E02. 搜索插入位置-力扣 35 题</h3><p><strong>要点</strong>：理解谁代表插入位置</p><p>给定一个排序数组和一个目标值</p><ul><li>在数组中找到目标值，并返回其索引</li><li>如果目标值不存在于数组中，返回它将会被按顺序插入的位置</li></ul><p>例如</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">输入: nums = [1,3,5,6], target = 5</span><br><span class="hljs-section">输出: 2</span><br><br><span class="hljs-section">输入: nums = [1,3,5,6], target = 2</span><br><span class="hljs-section">输出: 1</span><br><br><span class="hljs-section">输入: nums = [1,3,5,6], target = 7</span><br><span class="hljs-section">输出: 4</span><br></code></pre></td></tr></table></figure><p><strong>参考答案1</strong>：用二分查找基础版代码改写，基础版中，找到返回 m，没找到 i 代表插入点，因此有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">searchInsert</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> m;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> i; <span class="hljs-comment">// 原始 return -1</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>参考答案2</strong>：用二分查找平衡版改写，平衡版中</p><ul><li>如果 target &#x3D;&#x3D; a[i] 返回 i 表示找到</li><li>如果 target &lt; a[i]，例如 target &#x3D; 2，a[i] &#x3D; 3，这时就应该在 i 位置插入 2</li><li>如果 a[i] &lt; target，例如 a[i] &#x3D; 3，target &#x3D; 4，这时就应该在 i+1 位置插入 4</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">searchInsert</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span> &lt; j - i) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            i = m;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> (target &lt;= a[i]) ? i : i + <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">// 原始 (target == a[i]) ? i : -1;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>参考答案3</strong>：用 leftmost 版本解，返回值即为插入位置（并能处理元素重复的情况）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">searchInsert</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(target &lt;= a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <br>    &#125;<br>    <span class="hljs-keyword">return</span> i;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="E03-搜索开始结束位置-力扣-34-题"><a href="#E03-搜索开始结束位置-力扣-34-题" class="headerlink" title="E03. 搜索开始结束位置-力扣 34 题"></a>E03. 搜索开始结束位置-力扣 34 题</h3><p>给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。</p><p>如果数组中不存在目标值 target，返回 [-1, -1]。</p><p>你必须设计并实现时间复杂度为 O(log n) 的算法解决此问题</p><p>例如</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs inform7">输入：nums = <span class="hljs-comment">[5,7,7,8,8,10]</span>, target = 8<br>输出：<span class="hljs-comment">[3,4]</span><br><br>输入：nums = <span class="hljs-comment">[5,7,7,8,8,10]</span>, target = 6<br>输出：<span class="hljs-comment">[-1,-1]</span><br><br>输入：nums = <span class="hljs-comment">[]</span>, target = 0<br>输出：<span class="hljs-comment">[-1,-1]</span><br></code></pre></td></tr></table></figure><p><strong>参考答案</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">left</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">candidate</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            candidate = m;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> candidate;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">right</span><span class="hljs-params">(<span class="hljs-type">int</span>[] a, <span class="hljs-type">int</span> target)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = a.length - <span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">candidate</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= j) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> (i + j) &gt;&gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (target &lt; a[m]) &#123;<br>            j = m - <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[m] &lt; target) &#123;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            candidate = m;<br>            i = m + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> candidate;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[] searchRange(<span class="hljs-type">int</span>[] nums, <span class="hljs-type">int</span> target) &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> left(nums, target);<br>    <span class="hljs-keyword">if</span>(x == -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[] &#123;-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>&#125;;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[] &#123;x, right(nums, target)&#125;;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>月光下的Memary🌙 | 零碎的岛屿终会遇到海，慢慢亦漫漫</title>
    <link href="/2024/06/11/(%E6%9C%88%E5%85%89%E4%B8%8B%E7%9A%84Memary)%E9%9B%B6%E7%A2%8E%E7%9A%84%E5%B2%9B%E5%B1%BF%E7%BB%88%E4%BC%9A%E9%81%87%E5%88%B0%E6%B5%B7%EF%BC%8C%E6%85%A2%E6%85%A2%E4%BA%A6%E6%BC%AB%E6%BC%AB/"/>
    <url>/2024/06/11/(%E6%9C%88%E5%85%89%E4%B8%8B%E7%9A%84Memary)%E9%9B%B6%E7%A2%8E%E7%9A%84%E5%B2%9B%E5%B1%BF%E7%BB%88%E4%BC%9A%E9%81%87%E5%88%B0%E6%B5%B7%EF%BC%8C%E6%85%A2%E6%85%A2%E4%BA%A6%E6%BC%AB%E6%BC%AB/</url>
    
    <content type="html"><![CDATA[<p>​最近总是神经质地觉得自己能闻到风的味道，不是花香，不是夏天的热浪，也不是女孩子温柔的洗衣液或香水味，就是单调的风的具象味道。</p><p>​近些日子陆陆续续听到熟悉又陌生的高考消息，突然会想起当时高考那年的日子，大家对在计划着高考之后的假期会去哪里旅行，和谁一起出去玩，看些什么书和电影，追些什么综艺和电视剧，吵吵闹闹的，是高中给我们留下的最后的不多的愉快回忆，好像那个假期漫长的不会结束。但不管这些计划会完成多少，眼里闪闪发光憧憬这些日子已经足够令人珍惜了。</p><p>​“你们再看看题，我再看看你们。”老师当时的话仿佛就在耳旁。现在想来，好像真的是用高三去憧憬大学，却用一整个大学时间来怀念高中。</p><p>​说来也奇怪，活了十几二十年，也还是没有找到关于自己的人生定义，好像才刚刚出生，睁开眼睛，就要被生活的洪流推着走，没有考虑过自己真正想要什么，只是觉得一天一天将就着也就这么过去了。我想要的一生是怎样的呢？也许是偶尔想要经历跌宕起伏，走一回人生坎坷，体悟世间的沧桑变化，活成所谓别人眼里生命精彩的那个。但又间歇想要安逸平凡的小日子，在巷子里吹风在暖阳下和猫对话。这么看来，其实每个人都有自己的世界，不用完全敞开，开一扇窗就够了，想要照进来的光自然会进来。</p><p>​最近也越来越懂得逾期不候的道理，看好的机票不及时拍下来隔天航班就可能变更了，心仪的物件不当时决定好付款下次再看就卖完了，甜品店的新品上线总想去试一试但一直拖着就吃不到了。换季的不只是水果和气温，还有自己的心情，而我也不想要怀抱着充满遗憾的心，在反复地期待和失望中活了。</p><p>​一辈子看起来很长但过起来却很短，某些特定的时段和某种心态就更短了，很多事情都是当下不去做就不会再有了。所以千万不要觉得自己的梦想和爱好不值得一提，这些大大小小的事物不都是我们迫切想要么？要知道我们不是为了要变成别人期待的样子才去努力的，是为了成为自己想要的样子。</p><p>​可奇怪的是，现在的我慢慢的做任何选择都思前想后，小心翼翼。也不是说因为不再年轻，没有大把时间可以用来试错。而是清楚地知道，当下每一个看似简单的选择，都可能会指引自己走上不同的道路。成为蓦然回首时，众多遗憾里面的又一个。后来想想，人长大了，选择安全的，可预见的，有经验的路，也是本能。很多时候，遗憾的发生和意难平的出现，都是由当时的一个个的选择和决定而定性的。</p><p>​但还是希望尽量不放弃追求自己觉得最好的最适合的，妥协和将就换来的也只是遗憾和后悔。我时常在想，如果我们在面对质疑的时候，也不放弃，而是继续努力下去，那会不会碰到这个世界的一点点温柔呢？</p><p>​回想高考后的那段，感觉自己闯过了人生中非常重要的一个关卡。可以回家和老同学一起吃夜宵吹晚风畅谈，一同骑着小电驴回家。准备迎接懒觉起来后的太阳和接下来期待已久的暑假，还有无限可能的未来。我想“高考后”这三个字对于我们来说，不只是一个时间节点，更多的标志着：约定与梦想。而梦想再渺小，也有磅礴的力量。我相信，只要怀揣梦想，哪怕穿过漫长黑夜，总有一天，会穿越人群，发出属于自己的光芒。</p><p>​希望我们的每一个拐弯都是为了走到一条更好的道路上。</p><p>​希望我们不被岁月磨平棱角，不对世事消极抱怨，所有的选择都不是因为不得已，而是因为真心喜欢。</p><p>​希望我们在成为井井有条的大人前，拥有很多开心得一塌糊涂的回忆。</p><p>​零碎的岛屿终会遇到海，慢慢亦漫漫</p>]]></content>
    
    
    <categories>
      
      <category>月光下的Memary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Memary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot邮件发送（qq邮箱）</title>
    <link href="/2024/05/18/SpringBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <url>/2024/05/18/SpringBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="1、开启POP3-SMTP服务"><a href="#1、开启POP3-SMTP服务" class="headerlink" title="1、开启POP3|SMTP服务"></a>1、开启POP3|SMTP服务</h3><p>首先登录QQ邮箱&gt;&gt;&gt;登录成功后找到设置&gt;&gt;&gt;然后找到邮箱设置&gt;&gt;&gt;点击账户&gt;&gt;&gt;找到POP3|SMTP服务&gt;&gt;&gt;点击开启(开启需要验证，验证成功后会有一串授权码用于发送邮件使用)&gt;&gt;&gt;验证成功<br>记下QQ邮箱提示的授权码，这个授权码，就是发送邮件时需要的密码。</p><h3 id="2、引入依赖"><a href="#2、引入依赖" class="headerlink" title="2、引入依赖"></a>2、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3、application-yml配置"><a href="#3、application-yml配置" class="headerlink" title="3、application.yml配置"></a>3、application.yml配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-comment">#邮箱基本配置</span><br>  <span class="hljs-attr">mail:</span><br>    <span class="hljs-comment">#配置smtp服务主机地址</span><br>    <span class="hljs-comment"># qq邮箱为smtp.qq.com          端口号465或587</span><br>    <span class="hljs-comment"># sina    smtp.sina.cn</span><br>    <span class="hljs-comment"># aliyun  smtp.aliyun.com</span><br>    <span class="hljs-comment"># 163     smtp.163.com       端口号465或994</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">smtp.qq.com</span><br>    <span class="hljs-comment">#发送者邮箱</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">****@qq.com</span><br>    <span class="hljs-comment">#配置密码,注意不是真正的密码，而是刚刚申请到的授权码</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">fe456156fefefee</span><br>    <span class="hljs-comment">#端口号465或587</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">465</span><br>    <span class="hljs-comment">#默认的邮件编码为UTF-8</span><br>    <span class="hljs-attr">default-encoding:</span> <span class="hljs-string">UTF-8</span><br>    <span class="hljs-comment">#其他参数</span><br>    <span class="hljs-attr">properties:</span><br>     <span class="hljs-attr">mail:</span><br>        <span class="hljs-comment">#配置SSL 加密工厂</span><br>      <span class="hljs-attr">smtp:</span><br>        <span class="hljs-attr">ssl:</span><br>          <span class="hljs-comment">#本地测试，先放开ssl</span><br>          <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment">#开启debug模式，这样邮件发送过程的日志会在控制台打印出来，方便排查错误</span><br>      <span class="hljs-attr">debug:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="4、编写发送邮件的方法"><a href="#4、编写发送邮件的方法" class="headerlink" title="4、编写发送邮件的方法"></a>4、编写发送邮件的方法</h3><h4 id="邮件生成工具类-EmailUtil-java"><a href="#邮件生成工具类-EmailUtil-java" class="headerlink" title="邮件生成工具类 EmailUtil.java"></a><strong>邮件生成工具类</strong> <code>EmailUtil.java</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span>: Ohh</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Desctription</span>: 电子邮件生成内容实用程序</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Date</span>: 2024-05-18 11:52</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Version</span>: 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailUtil</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 生成电子邮件内容</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> captcha       验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> emailHtmlPath 电子邮件html路径</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@link</span> String&#125;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">buildEmailContent</span><span class="hljs-params">(String emailHtmlPath, String captcha)</span> &#123;<br>        <span class="hljs-comment">// 加载邮件html模板</span><br>        <span class="hljs-type">ClassPathResource</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathResource</span>(emailHtmlPath);<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">fileReader</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">buffer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        String line;<br>        <span class="hljs-keyword">try</span> &#123;<br>            inputStream = resource.getInputStream();<br>            fileReader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(inputStream));<br>            <span class="hljs-keyword">while</span> ((line = fileReader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>                buffer.append(line);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.info(<span class="hljs-string">&quot;发送邮件读取模板失败&#123;&#125;&quot;</span>, e.getMessage());<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span> (fileReader != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    fileReader.close();<br>                &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (inputStream != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    inputStream.close();<br>                &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 替换html模板中的参数</span><br>        <span class="hljs-keyword">return</span> MessageFormat.format(buffer.toString(), captcha, EMAIL_TITLE, EMAIL_TITLE_ENGLISH, PLATFORM_RESPONSIBLE_PERSON, PLATFORM_ADDRESS);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 构建付费成功电子邮件内容</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> emailHtmlPath 电子邮件html路径</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> orderName     订单名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> orderTotal    订单总额</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@link</span> String&#125;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">buildPaySuccessEmailContent</span><span class="hljs-params">(String emailHtmlPath, String orderName, String orderTotal)</span> &#123;<br>        <span class="hljs-comment">// 加载邮件html模板</span><br>        <span class="hljs-type">ClassPathResource</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathResource</span>(emailHtmlPath);<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">fileReader</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">buffer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        String line;<br>        <span class="hljs-keyword">try</span> &#123;<br>            inputStream = resource.getInputStream();<br>            fileReader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(inputStream));<br>            <span class="hljs-keyword">while</span> ((line = fileReader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>                buffer.append(line);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.info(<span class="hljs-string">&quot;发送邮件读取模板失败&#123;&#125;&quot;</span>, e.getMessage());<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span> (fileReader != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    fileReader.close();<br>                &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (inputStream != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    inputStream.close();<br>                &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 替换html模板中的参数</span><br>        <span class="hljs-keyword">return</span> MessageFormat.format(buffer.toString(), orderName, orderTotal, PLATFORM_RESPONSIBLE_PERSON, PATH_ADDRESS, EMAIL_TITLE);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送支付成功电子邮件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> emailAccount 电子邮件帐户</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> mailSender   邮件发件人</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> emailConfig  电子邮件配置</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> orderName    订单名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> orderTotal   订单总额</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> MessagingException 消息传递异常</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendPaySuccessEmail</span><span class="hljs-params">(String emailAccount, JavaMailSender mailSender, EmailConfig emailConfig, String orderName, String orderTotal)</span> <span class="hljs-keyword">throws</span> MessagingException &#123;<br>        <span class="hljs-type">MimeMessage</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> mailSender.createMimeMessage();<br>        <span class="hljs-comment">// 邮箱发送内容组成</span><br>        <span class="hljs-type">MimeMessageHelper</span> <span class="hljs-variable">helper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MimeMessageHelper</span>(message, <span class="hljs-literal">true</span>);<br>        helper.setSubject(<span class="hljs-string">&quot;【&quot;</span> + EMAIL_TITLE + <span class="hljs-string">&quot;】感谢您的购买，请查收您的订单&quot;</span>);<br>        helper.setText(buildPaySuccessEmailContent(EMAIL_HTML_PAY_SUCCESS_PATH, orderName, orderTotal), <span class="hljs-literal">true</span>);<br>        helper.setTo(emailAccount);<br>        helper.setFrom(EMAIL_TITLE + <span class="hljs-string">&#x27;&lt;&#x27;</span> + emailConfig.getEmailFrom() + <span class="hljs-string">&#x27;&gt;&#x27;</span>);<br>        mailSender.send(message);<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="邮件常量-EmailConstant-java"><a href="#邮件常量-EmailConstant-java" class="headerlink" title="邮件常量 EmailConstant.java"></a><strong>邮件常量</strong> <code>EmailConstant.java</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span>: Ohh</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Desctription</span>: 电子邮件常量</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Date</span>: 2024-05-17 23:20</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Version</span>: 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">EmailConstant</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 电子邮件html内容路径 resources目录下</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">EMAIL_HTML_CONTENT_PATH</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;email.html&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 电子邮件html支付成功路径</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">EMAIL_HTML_PAY_SUCCESS_PATH</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;pay.html&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * captcha缓存键</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">CAPTCHA_CACHE_KEY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;api:captcha:&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 电子邮件主题</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">EMAIL_SUBJECT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;验证码邮件&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 电子邮件标题</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">EMAIL_TITLE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;LinkSauce-API 接口开放平台&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 电子邮件标题英语</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">EMAIL_TITLE_ENGLISH</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;LinkSauce-API Open Interface Platform&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 平台负责人</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">PLATFORM_RESPONSIBLE_PERSON</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Ohh&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * todo 平台地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">PLATFORM_ADDRESS</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&lt;a href=&#x27;https://api.qimuu.icu/&#x27;&gt;请联系我们&lt;/a&gt;&quot;</span>;<br><br>    <span class="hljs-type">String</span> <span class="hljs-variable">PATH_ADDRESS</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&#x27;https://api.qimuu.icu/&#x27;&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="邮件配置-EmailConfig-java"><a href="#邮件配置-EmailConfig-java" class="headerlink" title="邮件配置 EmailConfig.java"></a><strong>邮件配置</strong> <code>EmailConfig.java</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span>: Ohh</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Desctription</span>: 电子邮件配置</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Date</span>: 2024-05-18 11:55</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Version</span>: 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;spring.mail&quot;)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailConfig</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">emailFrom</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;*****@qq.com&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="发送邮件方法-sendEmail"><a href="#发送邮件方法-sendEmail" class="headerlink" title="发送邮件方法 sendEmail"></a><strong>发送邮件方法</strong> <code>sendEmail</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendEmail</span><span class="hljs-params">(String emailAccount, String captcha)</span> <span class="hljs-keyword">throws</span> MessagingException &#123;<br>    <span class="hljs-comment">// 创建MimeMessage对象</span><br>    <span class="hljs-type">MimeMessage</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> mailSender.createMimeMessage();<br>    <span class="hljs-comment">// 邮箱发送内容组成</span><br>    <span class="hljs-type">MimeMessageHelper</span> <span class="hljs-variable">helper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MimeMessageHelper</span>(message, <span class="hljs-literal">true</span>);<br>    <span class="hljs-comment">// 设置主题</span><br>    helper.setSubject(EMAIL_SUBJECT);<br>    <span class="hljs-comment">// 设置正文</span><br>    helper.setText(buildEmailContent(EMAIL_HTML_CONTENT_PATH, captcha), <span class="hljs-literal">true</span>);<br>    <span class="hljs-comment">// 设置收件人</span><br>    helper.setTo(emailAccount);<br>    <span class="hljs-comment">// 设置发件人</span><br>    helper.setFrom(EMAIL_TITLE + <span class="hljs-string">&#x27;&lt;&#x27;</span> + emailConfig.getEmailFrom() + <span class="hljs-string">&#x27;&gt;&#x27;</span>);<br>    <span class="hljs-comment">// 发送邮件</span><br>    mailSender.send(message);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="邮件样式模板-email-html"><a href="#邮件样式模板-email-html" class="headerlink" title="邮件样式模板 email.html"></a><strong>邮件样式模板</strong> <code>email.html</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;email code&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-comment">&lt;!--邮箱验证码模板--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:#ECECEC; padding: 35px;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">cellpadding</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 600px;height: 100%; margin: 0px auto; text-align: left; position: relative; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; border-bottom-left-radius: 5px; font-size: 14px; font-family:微软雅黑, 黑体; line-height: 1.5; box-shadow: rgb(153, 153, 153) 0px 0px 5px; border-collapse: collapse; background-position: initial initial; background-repeat: initial initial;background:#fff;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 25px; line-height: 25px; padding: 15px 35px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: RGB(148,0,211); background-color: RGB(148,0,211); border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">valign</span>=<span class="hljs-string">&quot;middle&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;微软雅黑&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: rgb(255, 255, 255); &quot;</span>&gt;</span>&#123;1&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;word-break:break-all&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding:25px 35px 40px; background-color:#fff;opacity:0.8;&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 5px 0px; &quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#333333&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height: 20px; &quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height: 22px; &quot;</span>&gt;</span><br>                                尊敬的用户：<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!-- 中文 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您好！感谢您使用&#123;1&#125;，您的账号正在进行邮箱验证，验证码为：<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: &#x27;#ff8c00&#x27;;font-size: 16px;font-weight: bold&quot;</span>&gt;</span>&#123;0&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                        ，有效期5分钟，请尽快填写验证码完成验证！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!-- 英文 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 5px 0px; &quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#333333&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height: 20px; &quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height: 22px; &quot;</span>&gt;</span><br>                                Dear user:<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello! Thanks for using &#123;2&#125;, your account is being authenticated by email, the<br>                        verification code is: <span class="hljs-tag">&lt;<span class="hljs-name">span</span></span><br><span class="hljs-tag">                                <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: &#x27;#ff8c00&#x27;;font-size: 16px;font-weight: bold&quot;</span>&gt;</span> &#123;0&#125; <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> , valid for 5<br>                        minutes. Please fill in the<br>                        verification code as soon as<br>                        possible!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;margin:0 auto;&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding:10px 10px 0;border-top:1px solid #ccc;color:#747474;margin-bottom:20px;line-height:1.3em;font-size:12px;&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;3&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>此电子邮件仅限本人查看！如果有人要求你与他分享此 电子邮件或验证，或你认为误收此电子邮件，&#123;4&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>此为系统邮件，请勿回复<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                                Please do not reply to this system email<br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
      <tag>Java</tag>
      
      <tag>邮件</tag>
      
      <tag>后端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ant Design Pro 的初始化</title>
    <link href="/2024/04/29/AntDesignPro%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <url>/2024/04/29/AntDesignPro%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<blockquote><p>查看 <a href="pro.ant.design/zh-CN/docs/getting-started">官方文档</a></p></blockquote><ol><li><p>安装初始化脚手架</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">使用 npm</span><br>npm i @ant-design/pro-cli -g<br></code></pre></td></tr></table></figure></li><li><p>打开将要存放项目的文件夹 创建项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pro create linksauce-frontend<br></code></pre></td></tr></table></figure><p><strong>选择umi版本</strong></p><blockquote>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">? 🐂 使用 umi@4 还是 umi@3 ? (Use arrow keys)<br>❯ umi@4<br>umi@3<br></code></pre></td></tr></table></figure></blockquote></li><li><p>安装yarn</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">全局安装</span><br>npm install -g yarn<br></code></pre></td></tr></table></figure><p>查看yarn版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yarn -version<br></code></pre></td></tr></table></figure></li><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yarn<br></code></pre></td></tr></table></figure></li><li><p>运行测试<code>package.json</code>中的<code>start</code></p><p><img src="http://cdn.ohheng.cn/202404292132212.png" alt="image-20240329154642753"></p><p><img src="http://cdn.ohheng.cn/202404292132994.png" alt="image-20240329154642753"></p></li><li><p>项目瘦身，<strong>有坑，可跳过！！！</strong></p><ul><li><p>运行<code>package.json</code>中的<code>i18n-remove</code>去除国际化，手动删除<code>src\locales</code></p><blockquote><p>如果报错，检查一下是不是没删干净，可以手动去除</p></blockquote><p><strong>AntDesign去国际化 后 router页面显示问题：</strong></p><blockquote><p>  解决方法：执行 </p><p>  <code>yarn add eslint-config-prettier</code></p><p>  <code>yarn add eslint-plugin-unicorn</code></p><p>  然后修改<code>node_modules/@umijs/lint/dist/config/eslint/index.js</code> </p><p>  &#x2F;&#x2F; es2022: true把这个注释掉就可以解决问题</p></blockquote><p>如果不行，修改<code>config\routes.ts</code>如下即可：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> [<br>  &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;登录&#x27;</span>, <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user&#x27;</span>, <span class="hljs-attr">layout</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">routes</span>: [&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/login&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./User/Login&#x27;</span> &#125;] &#125;,<br>  &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;欢迎页面&#x27;</span>, <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/welcome&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;smile&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Welcome&#x27;</span> &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin&#x27;</span>,<br>    <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;crown&#x27;</span>,<br>    <span class="hljs-attr">access</span>: <span class="hljs-string">&#x27;canAdmin&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;管理员页面&#x27;</span>,<br>    <span class="hljs-attr">routes</span>: [<br>      &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin&#x27;</span>, <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/admin/sub-page&#x27;</span> &#125;,<br>      &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/sub-page&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Admin&#x27;</span> &#125;,<br>    ],<br>  &#125;,<br>  &#123; <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;table&#x27;</span>, <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/list&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./TableList&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;表格页&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/welcome&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;*&#x27;</span>, <span class="hljs-attr">layout</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./404&#x27;</span> &#125;,<br>];<br></code></pre></td></tr></table></figure></li><li><p>删除<code>src\tests</code></p></li></ul></li><li><p>重新安装依赖，重复第五步，确认是否能正常运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yarn<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>初始化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建七牛云图床提升百倍写作效率</title>
    <link href="/2024/04/29/%E6%90%AD%E5%BB%BA%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A%E6%8F%90%E5%8D%87%E7%99%BE%E5%80%8D%E5%86%99%E4%BD%9C%E6%95%88%E7%8E%87/"/>
    <url>/2024/04/29/%E6%90%AD%E5%BB%BA%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A%E6%8F%90%E5%8D%87%E7%99%BE%E5%80%8D%E5%86%99%E4%BD%9C%E6%95%88%E7%8E%87/</url>
    
    <content type="html"><![CDATA[<h2 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h2><p><strong>配置</strong><br>下面讲一下如何配置：</p><ol><li><p>注册七牛云账号<br>登录七牛官网，先注册一个七牛云的账号，这里注意，用户类型选择个人账号，然后进行实名认证。</p></li><li><p>创建七牛云存储空间</p><p><img src="http://cdn.ohheng.cn/202404271443412.png" alt="img"></p></li><li><p>给自己的域名添加二级域名，因为我的域名是阿里云的，所以这里用阿里云的讲了</p></li></ol><p>  进入阿里云控制台：【云解析DNS】-&gt;【域名解析】-&gt;【解析设置】</p><p>  <img src="http://cdn.ohheng.cn/202404271443365.png" alt="img">然后添加一个二级域名，这个完了先不要关，等下还要改</p><ol start="4"><li>绑定二级域名<br>进入七牛云域名绑定页面，点击添加域名，然后下图只需要把刚刚配置的域名写上，然后其余默认就行，点击创建</li></ol><p>  <img src="http://cdn.ohheng.cn/202404271443035.png" alt="img"></p><p>然后回到上一个页面，跟着下图操作</p><p><img src="http://cdn.ohheng.cn/202404271443133.png" alt="image-20240427133925927"></p><p><img src="http://cdn.ohheng.cn/202404271443376.png" alt="image-20240427133938256"></p><p>然后回到刚刚添加域名的页面，点击刚刚添加的域名，把<a href="http://www.baidu.com改成刚刚复制的东西/">www.baidu.com改成刚刚复制的东西</a></p><p>配置完了之后等一会，系统审核完成后会发邮件，等状态变成成功说明配置完成了</p><p><img src="http://cdn.ohheng.cn/202404271443099.png" alt="img"></p><p>记得查看外链域名修改为自己的，以及确认访问控制是否为公开</p><p><img src="http://cdn.ohheng.cn/202404271447536.png" alt="image-20240427144720493"></p><h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>下载安装PicGo </p><p>下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p>挑选一个版本，根据自己的操作系统（Win&#x2F;Linux&#x2F;Mac）来下载一个安装包：</p><p><img src="http://cdn.ohheng.cn/202404271443350.png" alt="image-20240427141940822"></p><p>进入七牛云页面，右上角头像-&gt;密钥管理-&gt;复制 AccessKey和SecretKey到PicGo中，</p><p>存储空间名是你第二步建立的空间的名字<br>网址是刚刚绑定的那个二级域名<br>存储区域：七牛云的存储区域（华东 z0，华北 z1，华南 z2，北美 na0，东南亚 as0 ），根据你空间所在的区域，填对应的代码</p><p><img src="http://cdn.ohheng.cn/202404271443329.png" alt="image-20220330004201058"></p><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>ypora开启图片自动上传</p><p>最后，打开Typora，在偏好设置中，按照图中配置即可：</p><p><img src="http://cdn.ohheng.cn/202404271444040.png" alt="image-20240427144413998"></p><blockquote><p>参考CSDN:<code>https://blog.csdn.net/qq_46311811/article/details/123836233</code></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>DNS</tag>
      
      <tag>Typora</tag>
      
      <tag>PicGo</tag>
      
      <tag>图床</tag>
      
      <tag>七牛云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHubPages绑定自定义域名</title>
    <link href="/2024/04/29/GitHubPages%E7%BB%91%E5%AE%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/"/>
    <url>/2024/04/29/GitHubPages%E7%BB%91%E5%AE%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>在阿里云配置 DNS 记录：</p><ol><li>登录到阿里云控制台。</li><li>转到<strong>【云解析DNS】&gt;【域名解析】&gt;【解析设置】</strong>。</li><li>添加以下四条 A 记录：</li></ol><ul><li>主机记录：**@**</li><li>记录类型：<strong>A</strong></li><li>记录值：<code>185.199.108.153</code></li><li>TTL：根据您的需求设置，建议设置为 600（10 分钟）。</li><li>添加第二条 A 记录，重复上述步骤，但将记录值更改为 <code>185.199.109.153</code>。</li><li>添加第三条 A 记录，重复上述步骤，但将记录值更改为 <code>185.199.110.153</code>。</li><li>添加第四条 A 记录，重复上述步骤，但将记录值更改为 <code>185.199.111.153</code>。</li></ul><ol start="5"><li>如果您希望使用 www 子域名 ，例如 <a href="http://www.example.com/">www.example.com</a> ，则需要添加一条 CNAME 记录：</li></ol><ul><li>主机记录：www</li><li>记录类型：CNAME</li><li>记录值：用户名. Github. Io（将用户名替换为您的 GitHub 用户名）</li><li>TTL：根据您的需求设置，建议设置为 600（10 分钟）。</li></ul><p>等待 DNS 解析生效。这可能需要一些时间，通常在几分钟到几小时之间，最多可能需要 48 小时。</p><p>完成这些步骤后，您的域名应该会成功指向您的 GitHub 个人主页。</p><p>如果在完成上述步骤后仍无法访问您的域名，请检查您的设置或等待 DNS 解析生效。</p><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><h3 id="A-这些记录值是在做什么"><a href="#A-这些记录值是在做什么" class="headerlink" title="A. 这些记录值是在做什么"></a>A. 这些记录值是在做什么</h3><p>这里的记录值是 DNS 记录的一部分。在这个过程中，我们添加了 A 记录和 CNAME 记录。下面是这些记录值的解释：</p><ol><li><p><strong>A 记录（地址记录）：</strong><br>A 记录用于将域名解析到一个 IPv4 地址。在这个例子中，我们添加了四个 A 记录，每个记录值是 GitHub Pages 的服务器 IP 地址：</p><ul><li><p>185.199.108.153</p></li><li><p>185.199.109.153</p></li><li><p>185.199.110.153</p></li><li><p>185.199.111.153</p></li></ul><p>当用户访问您的域名时（例如：example.com），DNS 服务器会查找与该域名关联的 IP 地址。通过设置这些 A 记录，您告诉 DNS 服务器，您的域名应该解析到这四个 GitHub Pages 服务器中的一个。这样，当用户访问您的域名时，他们将被引导到托管在 GitHub Pages 上的网站。</p></li><li><p><strong>CNAME 记录（规范名称记录）：</strong><br>CNAME 记录用于将一个域名（通常是子域名）映射到另一个域名。在这个例子中，我们添加了一个 CNAME 记录，将 www 子域名（如：<a href="http://www.example.com)映射到您的/">www.example.com）映射到您的</a> GitHub Pages 个人主页域名（如：用户名.github.io，将 用户名 替换为您的 GitHub 用户名）。</p><p>添加这个 CNAME 记录后，当用户访问 <a href="http://www.example.com/">www.example.com</a> 时，他们将被引导到与 用户名.github.io 关联的相同 GitHub Pages 网站。这样可以确保用户在访问 example.com 和 <a href="http://www.example.com/">www.example.com</a> 时看到的内容是一致的。</p></li></ol><p>总之，这些记录值用于指导 DNS 解析过程，将您的自定义域名解析到托管在 GitHub Pages 上的网站。这样，无论用户访问您的裸域名（如：example.com）还是带有 www 子域名的版本（如：<a href="http://www.example.com),他们都会看到您的/">www.example.com），他们都会看到您的</a> GitHub 个人主页。</p><h3 id="B-如果域名解析还是存在问题"><a href="#B-如果域名解析还是存在问题" class="headerlink" title="B. 如果域名解析还是存在问题"></a>B. 如果域名解析还是存在问题</h3><p>如果您的域名解析仍然存在问题，您可以尝试以下几种方法：</p><ol><li><p>检查您的 DNS 设置是否正确：</p><ul><li>确保您在阿里云的域名管理中已经添加了正确的 A 记录和 CNAME 记录。</li><li>确保您在 GitHub 仓库中添加了正确的 CNAME 文件，内容应为您的自定义域名。</li><li>如果您在设置过程中更改了任何设置，请确保保存更改。</li></ul></li><li><p>等待 DNS 解析生效：</p><ul><li>请耐心等待，因为 DNS 解析可能需要一段时间（从几分钟到 48 小时）。</li><li>您可以使用在线 DNS 查询工具（如 Google Public DNS 或其他第三方工具）来检查您的域名解析状态。</li></ul></li><li><p>清除浏览器缓存和 DNS 缓存：</p><ul><li>清除浏览器缓存以确保您查看的是最新版本的网站。</li><li>如果您使用的是 Windows，可以尝试通过命令提示符运行 <code>ipconfig /flushdns</code> 命令来清除 DNS 缓存。</li><li>对于 macOS，您可以使用 <code>sudo killall -HUP mDNSResponder</code> 命令来清除 DNS 缓存。</li><li>在 Linux 上，您可以使用 <code>sudo systemctl restart nscd</code> 或 <code>sudo /etc/init.d/nscd restart</code> 命令清除 DNS 缓存。</li></ul></li><li><p>检查防火墙或安全设置：</p><ul><li>某些防火墙或安全设置可能会阻止域名解析。请检查您的防火墙或安全设置，以确保它们没有阻止您的域名解析。</li></ul></li><li><p>寻求技术支持：</p><ul><li>如果问题仍然存在，请联系阿里云和 GitHub Pages 的技术支持，他们可以帮助您进一步诊断问题。</li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>阿里云</tag>
      
      <tag>DNS</tag>
      
      <tag>GitHub</tag>
      
      <tag>Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Nginx或修改后端代码解决跨域问题</title>
    <link href="/2024/04/29/%E4%BD%BF%E7%94%A8Nginx%E6%88%96%E4%BF%AE%E6%94%B9%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <url>/2024/04/29/%E4%BD%BF%E7%94%A8Nginx%E6%88%96%E4%BF%AE%E6%94%B9%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>浏览器为了用户的安全，仅允许向 <strong>同域名、同端口</strong> 的服务器发送请求。</p><p>如何解决跨域？</p><p>最直接的方式：把域名、端口改成相同的</p><h3 id="添加跨域头"><a href="#添加跨域头" class="headerlink" title="添加跨域头"></a>添加跨域头</h3><p>让服务器告诉浏览器：允许跨域（返回 cross-origin-allow 响应头）</p><h4 id="1-网关支持（Nginx）"><a href="#1-网关支持（Nginx）" class="headerlink" title="1. 网关支持（Nginx）"></a>1. 网关支持（Nginx）</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 跨域配置</span><br><span class="hljs-section">location</span><span class="hljs-regexp"> ^~</span> /api/ &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8080/api/;<br>    <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="hljs-variable">$http_origin</span>;<br>    <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="hljs-string">&#x27;true&#x27;</span>;<br>    <span class="hljs-attribute">add_header</span> Access-Control-Allow-Methods <span class="hljs-string">&#x27;GET, POST, OPTIONS&#x27;</span>;<br>    <span class="hljs-attribute">add_header</span> Access-Control-Allow-Headers <span class="hljs-string">&#x27;*&#x27;</span>;<br>    <span class="hljs-attribute">if</span> (<span class="hljs-variable">$request_method</span> = <span class="hljs-string">&#x27;OPTIONS&#x27;</span>) &#123;<br>        <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="hljs-string">&#x27;true&#x27;</span>;<br>        <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="hljs-variable">$http_origin</span>;<br>        <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="hljs-string">&#x27;GET, POST, OPTIONS&#x27;</span>;<br>        <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="hljs-string">&#x27;DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;<br>        <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Max-Age&#x27;</span> <span class="hljs-number">1728000</span>;<br>        <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Content-Type&#x27;</span> <span class="hljs-string">&#x27;text/plain; charset=utf-8&#x27;</span>;<br>        <span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Content-Length&#x27;</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">204</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-修改后端服务"><a href="#2-修改后端服务" class="headerlink" title="2. 修改后端服务"></a>2. 修改后端服务</h4><ol><li><p>配置 @CrossOrigin 注解</p></li><li><p>添加 web 全局请求拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebMvcConfg</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br> <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addCorsMappings</span><span class="hljs-params">(CorsRegistry registry)</span> &#123;<br>        <span class="hljs-comment">//设置允许跨域的路径</span><br>        registry.addMapping(<span class="hljs-string">&quot;/**&quot;</span>)<br>                <span class="hljs-comment">//设置允许跨域请求的域名</span><br>                <span class="hljs-comment">//当**Credentials为true时，**Origin不能为星号，需为具体的ip地址【如果接口不带cookie,ip无需设成具体ip】</span><br>                .allowedOrigins(<span class="hljs-string">&quot;http://localhost:9527&quot;</span>, <span class="hljs-string">&quot;http://127.0.0.1:9527&quot;</span>, <span class="hljs-string">&quot;http://127.0.0.1:8082&quot;</span>, <span class="hljs-string">&quot;http://127.0.0.1:8083&quot;</span>)<br>                <span class="hljs-comment">//是否允许证书 不再默认开启</span><br>                .allowCredentials(<span class="hljs-literal">true</span>)<br>                <span class="hljs-comment">//设置允许的方法</span><br>                .allowedMethods(<span class="hljs-string">&quot;*&quot;</span>)<br>                <span class="hljs-comment">//跨域允许时间</span><br>                .maxAge(<span class="hljs-number">3600</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>定义新的 corsFilter Bean，参考：<a href="https://www.jianshu.com/p/b02099a435bd">https://www.jianshu.com/p/b02099a435bd</a></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>跨域</tag>
      
      <tag>Nginx</tag>
      
      <tag>网关</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot项目初始模板</title>
    <link href="/2024/04/29/SpringBoot%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E6%A8%A1%E6%9D%BF/"/>
    <url>/2024/04/29/SpringBoot%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Java SpringBoot 项目初始模板，整合了常用框架和示例代码，大家可以在此基础上快速开发自己的项目。</p><p> GitHub仓库：<code>https://github.com/Ohheng/sptingboot-init</code></p></blockquote><h2 id="模板功能"><a href="#模板功能" class="headerlink" title="模板功能"></a>模板功能</h2><ul><li>Spring Boot 2.7.0（贼新）</li><li>Spring MVC</li><li>MySQL 驱动</li><li>MyBatis</li><li>MyBatis Plus</li><li>Spring Session Redis 分布式登录</li><li>Spring AOP</li><li>Apache Commons Lang3 工具类</li><li>Lombok 注解</li><li>Swagger + Knife4j 接口文档</li><li>Spring Boot 调试工具和项目处理器</li><li>全局请求响应拦截器（记录日志）</li><li>全局异常处理器</li><li>自定义错误码</li><li>封装通用响应类</li><li>示例用户注册、登录、搜索功能</li><li>示例单元测试类</li><li>示例 SQL（用户表）</li></ul><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li>全局替换<code>ctrl+shift+r</code></li></ol><p><img src="http://cdn.ohheng.cn/202404292132269.png" alt="image-20240329163141569"></p><ol><li><p>修改pom文件中的描述文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>LinkSauce API开放平台<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>修改<code>application.yml</code>文件中mysql和redis的配置</p></li><li><p>全局替换数据库名称</p><p><img src="http://cdn.ohheng.cn/202404292132273.png" alt="image-20240329164528352"></p></li><li><p>全局替换包名 , 并手动修改包名称</p><p><img src="http://cdn.ohheng.cn/202404292132251.png" alt="image-20240329164817957"></p><p><img src="http://cdn.ohheng.cn/202404292132271.png" alt="image-20240329165114772"></p></li><li><p>刷新maven</p></li><li><p>运行并测试,利用swagger测试增删改查</p><blockquote><p>访问<code>http://localhost:7529/api/doc.html#/home</code></p></blockquote><p><img src="http://cdn.ohheng.cn/202404292132259.png" alt="image-20240329165918440"></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>初始化</tag>
      
      <tag>SpringBoot</tag>
      
      <tag>Java</tag>
      
      <tag>后端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何用Hexo搭建个人博客?</title>
    <link href="/2024/04/29/%E5%A6%82%E4%BD%95%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/04/29/%E5%A6%82%E4%BD%95%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>我的个人博客搭建成功啦！</p><p>这篇文章会给大家分享我是如何从0开始搭建我的个人独立博客的</p><p>接下来我们开始吧</p><p><strong>文章比较精简，没有废话，不要跳步</strong></p><h2 id="一、准备工具"><a href="#一、准备工具" class="headerlink" title="一、准备工具"></a>一、准备工具</h2><h3 id="1、官网安装Nodejs-建议使用-Node-js-12-0-及以上版本"><a href="#1、官网安装Nodejs-建议使用-Node-js-12-0-及以上版本" class="headerlink" title="1、官网安装Nodejs(建议使用 Node.js 12.0 及以上版本)"></a>1、官网安装Nodejs(建议使用 Node.js 12.0 及以上版本)</h3><p>NodeJs是Hexo所必需的环境。</p><p>点击 NodeJs 官网，下载左边那个即可，下载好一直 next，选择一个文件夹位置在一直 next 即可完成。安装Node.js会包含环境变量及npm的安装。</p><p><img src="http://cdn.ohheng.cn/202404291759751.png"></p><p>验证安装完成cmd中输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">node -v<br>npm -v<br>返回版本号代表安装完成。<br></code></pre></td></tr></table></figure><h3 id="2、安装git"><a href="#2、安装git" class="headerlink" title="2、安装git"></a>2、安装git</h3><p>Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。</p><p>我们网站在本地搭建好了，需要使用Git同步到云服务器或者GitHub的代码库里。点击 git 官网，下载安装包。点击 next，选择文件夹位置，然后一直 next 到底就行了，选择默认配置就好，默认配置会将环境变量配置好的。安装成功右击鼠标如图所示：</p><p><img src="http://cdn.ohheng.cn/202404291759753.png"></p><p><strong>接下来我们测试下是否都下载成功</strong></p><p>管理员运行cmd，依次输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">node -v<br>npm -v（这个是node附带的）<br>git -v<br></code></pre></td></tr></table></figure><h3 id="3、下载安装Hexo博客框架"><a href="#3、下载安装Hexo博客框架" class="headerlink" title="3、下载安装Hexo博客框架"></a>3、下载安装Hexo博客框架</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>接下来初始化一下hexo，，在该文件夹下鼠标右键gitbash后输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init blog<br></code></pre></td></tr></table></figure><p>“blog”是你要生成博客的文件夹名称，可以根据自己的喜好来取名。生成的文件如图所示：</p><p><img src="http://cdn.ohheng.cn/202404291759757.png"></p><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g<br>hexo s<br></code></pre></td></tr></table></figure><p>完成后，打开浏览器输入地址：<a href="">localhost:4000 </a>就可以看到你生成的博客了。使用ctrl+c可以把服务关掉。</p><p><strong>安装fluid主题</strong><br>主题下载：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>解压复制到博客根目录<code>\themes</code>目录下，更名为<strong>fluid</strong></p><p>修改博客根目录目录下<code>_config.yml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">theme: fluid  # 指定主题<br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><p>个性化主题页面，更详细的使用说明参考<a href="https://hexo.fluid-dev.com/docs/">官方文档</a>。</p><h2 id="二、将博客托管到GitHub"><a href="#二、将博客托管到GitHub" class="headerlink" title="二、将博客托管到GitHub"></a>二、将博客托管到GitHub</h2><h3 id="1、GitHub生成代码库"><a href="#1、GitHub生成代码库" class="headerlink" title="1、GitHub生成代码库"></a>1、GitHub生成代码库</h3><p>首先，你先要有一个GitHub账户。点击+号，选择New repository，新建仓库</p><p><img src="http://cdn.ohheng.cn/202404291759777.png"></p><p>创建一个和你用户名相同的仓库，后面加**.github.io<strong>，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是<code>xxxx.github.io</code>，其中xxx就是你注册GitHub的用户名，点击</strong>create repository**。</p><p><img src="http://cdn.ohheng.cn/202404291759764.png"></p><h3 id="2、本地SSH生成密钥，将公钥复制到云端"><a href="#2、本地SSH生成密钥，将公钥复制到云端" class="headerlink" title="2、本地SSH生成密钥，将公钥复制到云端"></a>2、本地SSH生成密钥，将公钥复制到云端</h3><p>回到本地主机git bash中，创建用户名和密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;GitHub用户名&quot;<br>git config --global user.email &quot;GitHub注册邮箱&quot;<br>git config --global user.password &quot;GitHub登录密码&quot;<br></code></pre></td></tr></table></figure><p>创建SSH密钥，一路回车</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot;<br></code></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹，在C:\Users\24714.ssh中。<br>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，相当于钥匙，id_rsa.pub是公共秘钥，相当于锁。要把id_rsa.pub公共秘钥给GitHub，这样才能用自己的私人密钥去开这把锁。当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>将id_rsa.pub中的内容复制，而后在GitHub的setting中：</p><p><img src="http://cdn.ohheng.cn/202404291759781.png"></p><p>点击左侧SSH and GPG keys的设置选项，点击New SSH key，把你的id_rsa.pub里面的信息复制进去。title随便填，本地的公钥复制到key中。</p><p><img src="http://cdn.ohheng.cn/202404291759278.png"></p><p>在本地gitbash中检测GitHub公钥设置是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh git@github.com<br></code></pre></td></tr></table></figure><p>第一次登录需要输入GitHub的登录用户名和密码。</p><h3 id="3、修改配置文件"><a href="#3、修改配置文件" class="headerlink" title="3、修改配置文件"></a>3、修改配置文件</h3><p>下一步将我们的Hexo与GitHub关联起来，打开站博客根目录blog的配置文件_config.yml<br>翻到最后修改为：（注意后面三行缩进两格）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span> <br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">https://github.com/lixinyiceline/lixinyiceline.github.io.git（改）</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>repository里的内容是GitHub代码仓库浏览器网址栏的网址，注意后面加上.git，保存站点配置文件。</p><p>4.本地上传到GitHub<br>本地gitbash安装Git部署插件</p><p>在<strong>blog</strong>目录下打开控制台</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>这时，我们分别输入四条命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install<br>hexo clean <br>hexo g <br>hexo d<br></code></pre></td></tr></table></figure><p>完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="http://xxxx.github.io,你就会发现你的博客已经上线了,可以在网络上被访问了./">http://xxxx.github.io，你就会发现你的博客已经上线了，可以在网络上被访问了。</a></p><h2 id="三、网站资料"><a href="#三、网站资料" class="headerlink" title="三、网站资料"></a>三、网站资料</h2><p>我们的博客标题还是默认的hexo，整个页面是初始默认的，接下来我们对其进行修改</p><p>用记事本打开我们blog文件夹中的<code>_config.yml</code>文件</p><p>将#Site下面按自己的需求填上</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Site</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">副标题</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">描述</span><br><span class="hljs-attr">keywords:</span> <span class="hljs-string">关键词</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">站主</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">语言（可以填写zh-CN）</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">时区（可以填写Asia/Shanghai）</span><br></code></pre></td></tr></table></figure><p>然后保存</p><h2 id="四、如何上传文章"><a href="#四、如何上传文章" class="headerlink" title="四、如何上传文章"></a>四、如何上传文章</h2><p>我们在Blog文件夹中打开git bash,输入下方代码就可以生成新的文章md文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new 文章标题<br></code></pre></td></tr></table></figure><p>文章是.md格式，在我们的Blog文件夹中的<code>source/_posts</code>中</p><p>推荐用Typora软件来编辑.md格式的文件</p><blockquote><p>Typora官网：<a href="https://www.typoraio.cn/%EF%BC%8889%E5%85%83%E7%BB%88%E8%BA%AB%E4%BD%BF%E7%94%A8%EF%BC%8C%E6%8E%A8%E8%8D%90%E6%AD%A3%E7%89%88%EF%BC%89">https://www.typoraio.cn/（89元终身使用，推荐正版）</a></p><p>破解版奉上：<a href="https://kevinwu06.lanzout.com/iXkq30icv1ha">蓝奏云文件</a></p></blockquote><p>然后我们用Typora软件打开该.md文件就可以开始写文章了</p><p>写好以后，我们还是一样打开git bash生成、上传</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean <br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><blockquote><p>参考链接：</p><p><a href="https://blog.csdn.net/m0_50609661/article/details/125216866">搭建个人博客【搭建Hexo+Fluid博客并部署到GitHub&#x2F;云服务器（阿里云&#x2F;腾讯云）】</a></p><p><a href="https://blog.csdn.net/qq_21808961/article/details/84476504">hexo d命令报错 ERROR Deployer not found: git</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>初始化</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/04/29/hello-world/"/>
    <url>/2024/04/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
